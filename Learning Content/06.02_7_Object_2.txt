- 클래스의 등장 배경

변수 (1개의 자료형, 1개의 데이터)
배열 (1개의 자료형, 여러 개의 데이터)
구조체 (여러 개의 자료형, 여러 개의 데이터)

구조체 + 데이터 접근 제한, 기능 추가 = 객체(Object)

- 추상화(abstraction)
* 유연성을 확보하기 위해 구체적인 것은 제거한다는 의미.
프로그램에서 필요한 공통점을 추출하고(일반화)
불필요한 공통점을 제거하는 과정(특수화)


클래스 영역, 메소드 영역
1. 클래스 변수 : static 영역에 저장되며 static 키워드를 가짐
2. 멤버변수(인스턴스변수) : 클래스 영역에 선언. (전역변수)
3. 지역변수 : 클래스영역이 아닌 메서드, 생성자, 초기화블럭 내부에서 선언

변수의 종류별 라이프 사이클 (p. 32)

JVM의 암묵적 초기화 -> 필드에 값을 입력한 명시적 초기화 -> 초기화 블럭

static 초기화 블럭은 non-static 필드를 초기화하지 못하며
non-static 초기화 블럭과 static 초기화 블럭을 같이 사용하면
static 초기화 블럭 -> non static초기화 블럭 순으로 실행되어서
non-static 초기화 블럭값으로 초기화 됨.

{
	brand="samsung"
}

static {
	brand="lg"
}
brand = samsung


- 오버로딩
같은 이름의 생성자를 정의할 경우에는 오류.
오버로딩을 사용.
매개변수가 없는 default 생성자와
오버로딩된 매개변수가 있는 생성자

- this키워드
자기 자신을 가리키는 키워드
